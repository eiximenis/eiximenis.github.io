[{"content":"Abans de parlar sobre el com podem crear operadores, millor que veguem què és un operador, per a què el podem fer servir i quins avantatges ens aporta respecte altres mecanismes similars. Som-hi!\nUn operador és una forma de desplegar i mantenir aplicacions per a Kubernetes. La clau, aquí, és \u0026ldquo;per a\u0026quot;. O sigui, no estem parlant de desplegar una aplicació en un Kubernetes. Estem parlant de desplegar una aplicación per a Kubernetes, i això implica que farem servir kubectl no nomès per al desplegament, si no també pel manteniment i la configuració. És a dir, l\u0026rsquo;aplicació s\u0026rsquo;instal·la, es manté i es configura fent servir la API de Kubernetes i totes les eines associades (començant per kubectl).\nEl concepte d\u0026rsquo;operador fou introduit per la gent de CoreOS y es fonamenta en dos altres conceptes claus de Kubernetes, que hem d\u0026rsquo;entendre per poder comprendre com funcionen els operadors:\n Recursos: Un recurs en Kubernetes és un objecte que defineix un estat desitjat. Així, el recurs ReplicaSet permet definir el nombre de instàncies d\u0026rsquo;un determinat pod que es vol tenir sempre en execució. Controladors: Un controlador per la seva banda s\u0026rsquo;encarrega de monitoritzar un recurs i assegurar-se que l\u0026rsquo;estat real del clúster és compatible amb l\u0026rsquo;estat desitjat. En cas que això no sigui així, ha de prendre les accions necessàries per reconciliar els dos estats. Per exemple, el controlador de ReplicaSet s\u0026rsquo;encarrega de garantir que el nombre de pods reals en execució és sempre el nombre definir en el recurs ReplicaSet associat, creant i destruint pods sempre que calgui.  Controladors a Kubernetes Els recursos els gestionem amb els fitxers YAML, però els controlaors son codi que s\u0026rsquo;executa en el clúster. A vista d\u0026rsquo;ocell podem entendre un controlador com un \u0026ldquo;bucle etern\u0026rdquo; que realitza les següents accions:\n Consultar l\u0026rsquo;estat actual del clúster Si l\u0026rsquo;estat actual és el desitjat, no fer res. Però si no, utilitzar la API de Kubernetes per a modificar l\u0026rsquo;estat del clúster  Una representació, un pel més acurada, es pot veure en el següent diagrama:\nAquest esquema, adaptat de la documentació oficial, mostra amb una mica més de detall com funciona un controlador (està basat en els components que defineix la llibreria client-go). Introdueixo aquests termes perque son rellevants en el cas que vulguis cercar més informació.\n El controlador es subscriu a determinats events de la API de Kubernetes per a monitoritzar creacions, eliminacions o actualitzacions de recursos. A cada tipus de recurs se li asigna un informer que rebrà nomès els events del tipus de recurs indicat L\u0026rsquo;event es guarda en una cua de treball, mentres que l\u0026rsquo;estat del objecte es guarda en una cache Finalment la logica de reconciliació treballa amb l\u0026rsquo;event de la cua, la definició que està a la cache i la API de Kubernetes per realitzar les accions necessàries.  El diagrama anterior mostra un detall imporant: els operadors s\u0026rsquo;executen en pods, cosa que vol dir que instal·lar un operador consisteix simplement en desplegar fitxers YAML al clúster.\nControladors vs Operadors Tots els operadors fan servir el patró de controlador (i per tant en defineixen algun). Però no tots els controladors son operadors. Pots fer servir un controlador sense res més, quan necessitis reaccionar a un tipus de recurs, però els operadors van un pèl més enllà, ja que:\n Defineixen un o més controladors Defineixen un o més CRDs Gestionen el cicle de vida Estan orientats a una aplicació  L'últim punt és important: un operador està dedicat a una aplicació. Si aquesta aplicació requereix altres aplicacions, hauries de fer servir altres operadors, per aquestes aplicacions. Per exemple, pots tenir un operador encarregat d\u0026rsquo;instal·lar un, posem pel cas, wordpress. Però si wordpress depèn de mysql, hauries d\u0026rsquo;usar un altre operador pel mysql.\nEls altres tres punts posen de manifest les diferències entre operadors i controladors: un operador és un (o mès d\u0026rsquo;un) controlador amb un conjunt de CRDs que permeten configurar i mantenir la aplicació fent servir la API de Kubernetes. I per acabar: un operador sol mantenir el cicle de vida de l\u0026rsquo;aplicació que gestiona, creant i destruint els pods necessaris.\nAgafem d\u0026rsquo;exemple l\u0026rsquo;operador de Prometheus. Aquest operador instal·la varis CRDs, dels quals en destaquen un anomenat monitoring.coreos.com/v1/Prometheus que representa al propi Prometheus i un altre que és monitoring.coreos.com/v1/ServiceMonitor que defineix quins serveis han de ser monitoritzats (per prometheus). Si instal·les l\u0026rsquo;operador de Prometheus, no has de fer servir cap deployment per instal·lar un Prometheus al teu clúster: nomès has de crear un CRD de tipus Prometheus. La imatge que vé a continuació mostra un Prometheus (de nom k8s) desplegar a l\u0026rsquo;espai de noms monitoring:\nFixa\u0026rsquo;t com el propi CRD de Prometheus defineix les repliques (2 en aquest cas) i és el propi operador el que s\u0026rsquo;encarrega de crear i destruir els pods que executen Prometheus (no hi ha cap deployment ni replicaset).\nOperadors vs Helm No se suposa que per instal·lar aplicacions a Kubernetes disposem de Helm? Hi ha un cert solapament entre algunes de les responsabilitats d\u0026rsquo;un operador i les de Helm: en ambdós casos tenim mecanismes per a gestionar workloads complexos. Si instal·lar la teva aplicació és un procés d\u0026rsquo;un sol pas i no requereixes que aquesta es gestioni a través d\u0026rsquo;objectes de Kubernetes, llavors Helm és el que hauries de considerar. Per altra banda, si la teva aplicació requereix aquest tipus de gestió (a través d\u0026rsquo;objectes de Kubernetes), llavors hauries de pensar en crear un operador. I tingues present que, com que desplegar un operador consisteix en desplegar els seus fitxers YAML, no hi ha res que t\u0026rsquo;impedeixi fer-ho amb Helm.\nÉs bona pràctica instal·lar els CRDs que el teu operador defineixi, via YAML en comptes de fer-ho via codi al operador. La raó és per seguretat: desplegar un CRD requereix permisos d'àmbit de clúster, mentres que el teu operador, probablement, no necessita uns permisos tan elevats per fer la seva feina habitual. Però si instal·les els CRDs via codi, llavors has d\u0026rsquo;assignar permisos de clúster al pod que executa l\u0026rsquo;operador, trencant el principi de mínim privilegi. Així, pots definir tots els CRDs a un chart de Helm i que els instal·li juntament amb el deployment que executi l\u0026rsquo;operador i la resta d\u0026rsquo;elements necessaris. Això sí, tingues present que has d\u0026rsquo;indicar-li a Helm que instal·li els CRDs abans que la resta d\u0026rsquo;elements, ja que si no, tindràs problemes. Com fer això depèn de si uses Helm 2.x o 3.x.\nConclusió En aquest primer post hem cobert el bàsic que necessites saber sobre operadors a Kubernetes. En els posts que venen veurem com crear un operador i com desplegar-lo!\n","description":"Som-hi! Anem a començar la sèrie sobre com crear operadors per a Kubernetes. En aquest primer post veurem què és un operador de Kubernetes i quins usos té.","id":0,"section":"posts","tags":null,"title":"El patró operador a Kubernetes","uri":"https://www.eiximenis.dev/ca/posts/2020-04-06-el-patron-operador-en-k8s/"},{"content":"Sempre he pensat que escriure un blog serveix per a vàries coses.\nPrimer per aprendre, escriure sobre un tema és una de les millors formes de forçar-se a un mateix a aprendre. Només per això val la pena escriure!\nSegon, per a compartir experiències i coneixements. Molta gent té por d\u0026rsquo;escriure perquè NO considera que estigui a l\u0026rsquo;alçada. A l\u0026rsquo;alçada de què? Habitualment d\u0026rsquo;unes expectatives falsament auto-imposades. Molts cops ens pensem que no podem dir res que ja estigui dit. I dit per algú que en sap més que nosaltres. Mira, tant si ets un júnior que comença en aquest mon, com si tens el cul pelat, tens una cosa única a compartir i que ningúi pot haver dit abans: les teves experiències. Acabes de jugar uns dies amb una llibrería nova de JavaScript? Doncs comparteix el que t\u0026rsquo;ha semblat o com t\u0026rsquo;has enfrontat al procés d\u0026rsquo;aprendre a usar-la. Després, potser t\u0026rsquo;animes a escriure un petit article d\u0026rsquo;iniciació i així anar fent\u0026hellip;\nJo, com molta gent, he tingut la idea d\u0026rsquo;escriure en anglès en algun moment. Però al final sempre ho he descartat. Escriure en anglès és temptador: et permet arribar a una gran base de gent i aspirar a una major rellevància. Personalment, aquests aspectes no m\u0026rsquo;importen gens i sempre he volgut aportar i compartir en el meu idioma i posar el meu granet de sorra i generar contingut que no estigui en anglès. Així que sempre he escrit en castellà i ho seguiré fent. Però alhora penso en la situació del meu altre idioma, el català. I des d\u0026rsquo;aquí vull aportar un altre granet de sorra, publicant contingut en català. Pot semblar superflu, ja que tothom qui sap català sap també castellà, però no ho faig per aconseguir nous lectors: ho faig perquè tots aquells que vulguin llegir en català ho puguin fer i per a que hi hagi contingut en català i contribuir, modestament, a normalitzar la situació de la llengua.\nL\u0026rsquo;idioma principal del blog seguirà sent el castellà, però intentaré anar traduint alguns articles antics (però encara rellevants) del castellà al català i que tot lo nou surti en ambdós idiomes. Potser no alhora (tinc el temps que tinc per a poder dedicar al blog), però en el menor temps possible.\nNo crec que hi hagin entrades només en català, tot i que no ho descarto si comento alguna cosa d\u0026rsquo;interès més local. En tot cas, no serà la norma habitual.\nUna abraçada i cuideu-vos!\n","description":"No, no em refereixo a aquest blog... em refereixo al llibre (o sèrie de llibres depèn de com es miri) publicats pel franciscà i teòleg Fra Francesc Eiximenis. I si ell va escriure en català, no veig per què jo no puc fer-ho. En resum: que publucaré també articles en català. Si vols més detalls... segueix llegint!","id":1,"section":"posts","tags":null,"title":"El 'Lo Crestià' original estava escrit en català...","uri":"https://www.eiximenis.dev/ca/posts/2020-03-26-lo-crestia-originalment-era-en-catala/"}]