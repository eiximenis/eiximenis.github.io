<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>programacion on Lo Crestià</title><link>https://www.eiximenis.dev/categories/programacion/</link><description>Recent content in programacion on Lo Crestià</description><generator>Hugo -- gohugo.io</generator><language>es</language><copyright>{}</copyright><lastBuildDate>Mon, 20 Jan 2020 18:20:00 +0000</lastBuildDate><atom:link href="https://www.eiximenis.dev/categories/programacion/index.xml" rel="self" type="application/rss+xml"/><item><title>Heap vs Stack</title><link>https://www.eiximenis.dev/posts/2020-01-24-heap-vs-stack/</link><pubDate>Mon, 20 Jan 2020 18:20:00 +0000</pubDate><atom:modified>Mon, 20 Jan 2020 18:20:00 +0000</atom:modified><guid>https://www.eiximenis.dev/posts/2020-01-24-heap-vs-stack/</guid><description>Es curioso como hoy en día mucha gente no tiene nada clara la diferencia entre la pila y el heap, que son los dos &amp;ldquo;lugares&amp;rdquo; donde se pueden almacenar valores (tales como objetos). Por norma general (salvo que uses interop para gestionar memoria directamente con funciones provistas por el sistema operativo) tus objetos terminarán o bien en la pila, o bien en el heap.
La pila es rapidísima pero su alcance se limita al de la función: es decir, cada función tiene su propia pila y esa es destruída una vez se sale de la función.</description><dc:creator>eiximenis</dc:creator><category>programacion</category></item></channel></rss>