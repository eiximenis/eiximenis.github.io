<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>herramientas on Lo Crestià</title><link>https://www.eiximenis.dev/categories/herramientas/</link><description>Recent content in herramientas on Lo Crestià</description><generator>Hugo -- gohugo.io</generator><language>es</language><copyright>{}</copyright><lastBuildDate>Mon, 22 Jan 2018 16:28:19 +0000</lastBuildDate><atom:link href="https://www.eiximenis.dev/categories/herramientas/index.xml" rel="self" type="application/rss+xml"/><item><title>Dependencias condicionales en VS</title><link>https://www.eiximenis.dev/posts/2018-01-22-dependencias-condicionales-en-vs/</link><pubDate>Mon, 22 Jan 2018 16:28:19 +0000</pubDate><atom:modified>Mon, 22 Jan 2018 16:28:19 +0000</atom:modified><guid>https://www.eiximenis.dev/posts/2018-01-22-dependencias-condicionales-en-vs/</guid><description>&lt;p>Bueno, imagina que trabajas en un proyecto en NetCore que debe ser multiplataforma. En general el propio framework te provee de todo lo necesario, pero sigamos imaginando que algunas partes de tu proyecto dependen via P/Invoke de llamadas nativas.&lt;/p>
&lt;p>En este caso puedes optar por tener todos los enlaces P/Invoke para cada plataforma en el mismo proyecto (no hay ningún problema) o bien tenerlos separados en proyectos por cada una de las plataformas.&lt;/p></description><dc:creator>eiximenis</dc:creator><category>herramientas</category><category>Sin categoría</category><category>visual studio</category></item></channel></rss>