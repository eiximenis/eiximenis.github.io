<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>serverless on Lo Crestià</title><link>https://www.eiximenis.dev/categories/serverless/</link><description>Recent content in serverless on Lo Crestià</description><generator>Hugo -- gohugo.io</generator><language>es</language><copyright>{}</copyright><lastBuildDate>Thu, 06 Feb 2020 16:30:00 +0000</lastBuildDate><atom:link href="https://www.eiximenis.dev/categories/serverless/index.xml" rel="self" type="application/rss+xml"/><item><title>Serverless &amp; Kubernetes</title><link>https://www.eiximenis.dev/posts/2020-02-06-serverless-k8s/</link><pubDate>Thu, 06 Feb 2020 16:30:00 +0000</pubDate><guid>https://www.eiximenis.dev/posts/2020-02-06-serverless-k8s/</guid><description>Antes de empezar a discutir como Kubernetes y Serverless pueden estar juntos en la misma frase que no sea sacada de un flyer comercial (y por lo tanto, tenga sentido) debemos hablar un poco sobre Serverless en si mismo.
¿Qué es Serverless? El concepto de Serverless significa a grandes rasgos que no &amp;ldquo;ves&amp;rdquo; el servidor que ejecuta tu aplicación. Claro, servidor hay, todavía no se ha inventado el humo que ejecute software, así que en algún lado hay un servidor.</description></item><item><title>Azure Functions en Linux con un Consumption Plan en ARM</title><link>https://www.eiximenis.dev/posts/2019-10-24-azure-functions-en-linux-con-un-consumption-plan-en-arm/</link><pubDate>Thu, 24 Oct 2019 00:00:00 +0000</pubDate><guid>https://www.eiximenis.dev/posts/2019-10-24-azure-functions-en-linux-con-un-consumption-plan-en-arm/</guid><description>&lt;p>Buenas! Esos días he tenido que desplegar una Azure Function en Python. A día de hoy solo se pueden desplegar en Azure Functions cuyo service plan sea Linux (no están soportadas en Windows).&lt;/p>
&lt;p>En mi caso quería una plantilla ARM que soportase la creación del service plan y la function app tanto en consumption como en app service plan, para tener la máxima flexibilidad.&lt;/p></description></item><item><title>Container Groups en ACI</title><link>https://www.eiximenis.dev/posts/2019-02-19-container-groups-en-aci/</link><pubDate>Tue, 19 Feb 2019 22:18:45 +0000</pubDate><guid>https://www.eiximenis.dev/posts/2019-02-19-container-groups-en-aci/</guid><description>&lt;p>Este es el segundo post sobre Azure Container instances. En el &lt;a href="https://geeks.ms/etomas/2019/02/01/aci-azure-container-instances-serverless-containers/">post anterior&lt;/a> vimos lo fácil que era publicar un contenedor y ejecutarlo usando ACI y discutimos algunas de sus limitaciones.&lt;/p>
&lt;p>En este post veremos que ACI nos permite &lt;strong>ejecutar grupos de contenedores&lt;/strong>, de forma igualmente sencilla y así tener algunos escenarios más complejos.&lt;/p></description></item><item><title>ACI (Azure Container Instances): Serverless containers</title><link>https://www.eiximenis.dev/posts/2019-02-01-aci-azure-container-instances-serverless-containers/</link><pubDate>Fri, 01 Feb 2019 11:56:15 +0000</pubDate><guid>https://www.eiximenis.dev/posts/2019-02-01-aci-azure-container-instances-serverless-containers/</guid><description>&lt;p>Cuando hablamos de &lt;em>serverless&lt;/em> todo el mundo lo asociamos a las soluciones tipo FaaS como Azure Functions o Amazon Lambda, pero hay otros productos que se engloban dentro de ese paradigma y en Azure uno de los más interesantes es &lt;strong>Azure Container Instances&lt;/strong>. Del mismo modo que con una Azure Function me limito a poner código en “ejecución” y esto se ejecuta en algún sitio, usando ACI lo que hago es “poner un contenedor” que se ejecutará en&amp;hellip; bueno, donde sea. Eso es &lt;em>serverless&lt;/em> señores.&lt;/p>
&lt;p>Con este post quiero iniciar una pequeña serie dedicada a ACI, como ACI se compara con su &lt;a href="https://www.youtube.com/watch?v=B90D3Eq7KjU">primo Zumosol&lt;/a> (AKS) y como AKS y ACI habilitan interesantes escenarios (altísima escalabilidad y workloads mixtos de contenedores).&lt;/p></description></item><item><title>Azure Functions y SignalR: serverless push</title><link>https://www.eiximenis.dev/posts/2018-09-06-azure-functions-y-signalr-serverless-push/</link><pubDate>Thu, 06 Sep 2018 09:11:46 +0000</pubDate><guid>https://www.eiximenis.dev/posts/2018-09-06-azure-functions-y-signalr-serverless-push/</guid><description>&lt;p>El hecho de ofrecer SignalR como servicio PaaS en Azure y su integración con Azure Functions nos abre un escenario interesante: ahora es facilísimo hacer notificaciones &lt;em>push&lt;/em> desde una Azure Function (AF) a un cliente SignalR (p. ej. una Web).&lt;/p></description></item></channel></rss>