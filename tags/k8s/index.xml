<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>k8s on Lo Crestià</title><link>https://www.eiximenis.dev/tags/k8s/</link><description>Recent content in k8s on Lo Crestià</description><generator>Hugo -- gohugo.io</generator><language>es</language><copyright>{}</copyright><lastBuildDate>Sun, 15 Nov 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://www.eiximenis.dev/tags/k8s/index.xml" rel="self" type="application/rss+xml"/><item><title>De StatefulSets y headless services</title><link>https://www.eiximenis.dev/posts/2020-11-15-de-statefulsets-y-headless-services/</link><pubDate>Sun, 15 Nov 2020 00:00:00 +0000</pubDate><atom:modified>Sun, 15 Nov 2020 00:00:00 +0000</atom:modified><guid>https://www.eiximenis.dev/posts/2020-11-15-de-statefulsets-y-headless-services/</guid><description>Los tipos más habituales de servicios en Kubernetes son los llamados ClusterIP que tienen una IP privada solo accesible desde el interior del clúster. Asumiendo que CoreDNS está instalado (que es lo habitual, vamos), esos servicios generan una entrada DNS con su nombre, bajo el cual engloban todos los pods que cumplan con el selector del servicio. Luego, tenemos los servicios de tipo NodePort que además de todo lo anterior son accesibles mediante una llamada a los nodos del clúster con el puerto especificado y son pues la forma de exponer servicios al exterior.</description><dc:creator>eiximenis</dc:creator><category>k8s</category><category>kubernetes</category></item><item><title>Project tye</title><link>https://www.eiximenis.dev/posts/2020-10-05-project-tye/</link><pubDate>Mon, 05 Oct 2020 00:00:00 +0000</pubDate><atom:modified>Mon, 05 Oct 2020 00:00:00 +0000</atom:modified><guid>https://www.eiximenis.dev/posts/2020-10-05-project-tye/</guid><description>Project Tye (simplemente Tye de ahora en adelante) es un proyecto experimental del equipo de NetCore pensado para ayudarnos en el desarrollo de apliaciones de (micro)servicios basadas en NetCore. Aunque podríamos llegar a usar Tye sin netcore, no es para lo que está concebida: NO es una herramienta de propósito general. Es una herramienta pensada para desarrolladores en netcore.
Funcionalidades de Tye Es complicado definir qué es exactamente Tye, ya que anda a medio camino entre un orquestador básico, un ejecutor de aplicaciones, un control plane básico y un gestor de despliegues.</description><dc:creator>eiximenis</dc:creator><category>microservices</category><category>kubernetes</category><category>k8s</category><category>netcore</category></item><item><title>Opinión: De Kubernetes y independencia del cloud</title><link>https://www.eiximenis.dev/posts/2020-09-26-de-kubernetes-y-cloud-agnostic/</link><pubDate>Sat, 26 Sep 2020 18:00:00 +0000</pubDate><atom:modified>Sat, 26 Sep 2020 18:00:00 +0000</atom:modified><guid>https://www.eiximenis.dev/posts/2020-09-26-de-kubernetes-y-cloud-agnostic/</guid><description>Cuando una organización me dice que ha elegido Kubernetes para desplegar en él su último proyecto, siempre pregunto cuales son las razones que han llevado a elegir Kubernetes como plataforma. Y lo pregunto porque en muchos casos, lo que se quiere desplegar en el clúster es poco más que una API y un frontend&amp;hellip; Vamos, una web de toda la vida. ¿Cuales son los motivos para meterte en un producto con un alto nivel de complejidad como Kubernetes?</description><dc:creator>eiximenis</dc:creator><category>cloud</category><category>kubernetes</category><category>k8s</category><category>opinion</category></item><item><title>Configurar SSL en un cluster de k8s</title><link>https://www.eiximenis.dev/posts/2017-10-16-configurar-ssl-en-un-cluster-de-k8s/</link><pubDate>Mon, 16 Oct 2017 14:38:27 +0000</pubDate><atom:modified>Mon, 16 Oct 2017 14:38:27 +0000</atom:modified><guid>https://www.eiximenis.dev/posts/2017-10-16-configurar-ssl-en-un-cluster-de-k8s/</guid><description>&lt;p>¡Buenas! En esta entrada voy a resumir los pasos seguidos para añadir soporte SSL a un cluster Kubernetes. En mi caso lo tengo desplgado en ACS pero eso es irrelevante.&lt;/p>
&lt;p>Lo único que si usas ACS y quieres usar una IP determinada, recuerda que la IP pública que vayas a usar debe estar creada anteriormente. Si no, por más que la especifiques dentro de la configuración del servicio (usando &lt;em>loadBalancerIP&lt;/em>), Kubernetes no va a poder levantar el servicio.&lt;/p></description><dc:creator>eiximenis</dc:creator><category>acs</category><category>k8s</category><category>nginx</category><category>ssl</category><category>Sin categoría</category></item></channel></rss>